#!/data/data/com.termux/files/usr/bin/bash
# Advanced Smart File Manager - Folder Navigation + File Actions

handle_file() {
    local file="$1"
    echo
    echo "📄 File selected: $(basename "$file")"
    echo "What would you like to do with the file?"
    echo "1) Open using external tool (termux-open)"
    echo "2) Edit using nano"
    echo "3) Cancel and return"
    read -p "Enter choice [1-3]: " action

    case "$action" in
        1)
            termux-open "$file"
            exit 0
            ;;
        2)
            nano "$file"
            exit 0
            ;;
        3)
            return
            ;;
        *)
            echo "❌ Invalid option. Try again."
            handle_file "$file"
            ;;
    esac
}

get_abs_path() {
    local target="$1"
    if [ -d "$target" ]; then
        cd -- "$target" && pwd
    elif [ -f "$target" ]; then
        local dir=$(dirname -- "$target")
        local base=$(basename -- "$target")
        echo "$(cd -- "$dir" && pwd)/$base"
    else
        echo "Error: '$target' does not exist" >&2
        return 1
    fi
}

# Handle command-line arguments
if [ $# -eq 1 ]; then
    target="$1"
    
    if [ -d "$target" ]; then
        path=$(get_abs_path "$target")
    elif [ -f "$target" ]; then
        selected=$(get_abs_path "$target")
        handle_file "$selected"
        exit $?
    else
        echo "Error: '$target' not found" >&2
        exit 1
    fi
else
    path=$(pwd)
fi

shopt -s nullglob
while true; do
    echo
    echo "📂 Location: $path"
    items=("$path"/*)
    
    if [ ${#items[@]} -eq 0 ]; then
        echo "🛑 This directory is empty"
        sleep 1
        path=$(dirname "$path")
        continue
    fi

    idx=1
    for item in "${items[@]}"; do
        if [ -d "$item" ]; then
            icon="📁"
        else
            icon="📄"
        fi
        printf "%2d) %s %s\n" "$idx" "$icon" "$(basename "$item")"
        idx=$((idx+1))
    done

    echo
    echo "n) New folder    u) Up directory    q) Quit"
    read -p "Select item number or command: " choice

    # Handle commands
    case "$choice" in
        q|Q)
            exit 0
            ;;
        u|U)
            [ "$path" != "/" ] && path=$(dirname "$path")
            continue
            ;;
        n|N)
            read -p "Enter new folder name: " newdir
            mkdir -p -- "$path/$newdir" && echo "✅ Folder created"
            continue
            ;;
    esac

    # Handle numeric selection
    if ! [[ "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -lt 1 ] || [ "$choice" -gt "${#items[@]}" ]; then
        echo "⚠️  Invalid selection" >&2
        continue
    fi

    selected="${items[$((choice-1))]}"

    if [ -d "$selected" ]; then
        path="$selected"
    elif [ -f "$selected" ]; then
        handle_file "$selected"
    else
        echo "❓ Unsupported item type" >&2
    fi
done
